DROP DATABASE IF EXISTS MettingOnTime_db;
CREATE DATABASE MettingOnTime_db;

USE MettingOnTime_db;

-- Supprimer les contraintes de clé étrangère en double
/*ALTER TABLE Posseder DROP FOREIGN KEY FK_Possèder_id_USER;
ALTER TABLE Posseder DROP FOREIGN KEY FK_Possèder_id_SPECIALISTE;

ALTER TABLE Prendre DROP FOREIGN KEY FK_Prendre_id_USER;
ALTER TABLE Prendre DROP FOREIGN KEY FK_Prendre_id_SPECIALISTE;
ALTER TABLE Prendre DROP FOREIGN KEY FK_Prendre_id_RENDEZ_VOUS;

ALTER TABLE Localiser DROP FOREIGN KEY FK_Localiser_id_ADRESSE;
ALTER TABLE Localiser DROP FOREIGN KEY FK_Localiser_id_USER;

ALTER TABLE USER DROP FOREIGN KEY FK_USER_id_PERMISSION;
*/

DROP TABLE IF EXISTS PERMISSION;
CREATE TABLE PERMISSION (
    id_PERMISSION INT AUTO_INCREMENT NOT NULL,
    statut_PERMISSION VARCHAR(100) NOT NULL,
    PRIMARY KEY (id_PERMISSION)
);


DROP TABLE IF EXISTS USER;
CREATE TABLE USER (
    id_USER INT AUTO_INCREMENT NOT NULL,
    first_name_USER VARCHAR(255),
    last_name_USER VARCHAR(255),
    num_phone_USER VARCHAR(255) NOT NULL,
    email_USER VARCHAR(255) NOT NULL,
    dt_created_USER DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP, 
    id_PERMISSION INT NOT NULL,
    PRIMARY KEY (id_USER),
    CONSTRAINT FK_USER_id_PERMISSION FOREIGN KEY (id_PERMISSION) REFERENCES PERMISSION (id_PERMISSION) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS RENDEZ_VOUS;
CREATE TABLE RENDEZ_VOUS (
    id_RENDEZ_VOUS INT AUTO_INCREMENT NOT NULL,
    title_RENDEZ_VOUS VARCHAR(255) NOT NULL,
    dt_time_start_RENDEZ_VOUS DATETIME NOT NULL,
    dt_time_end_RENDEZ_VOUS DATETIME NOT NULL,
    confirm BOOLEAN NOT NULL,
    content_RENDEZ_VOUS TEXT NOT NULL,
    dt_created_RENDEZ_VOUS DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id_RENDEZ_VOUS)
);

DROP TABLE IF EXISTS SPECIALITE;
CREATE TABLE SPECIALITE (
    id_SPECIALITE INT AUTO_INCREMENT NOT NULL,
    title_SPECIALITE VARCHAR(255) NOT NULL,
    decription_SPECIALITE TEXT NOT NULL,
    PRIMARY KEY (id_SPECIALITE)
);

DROP TABLE IF EXISTS ADRESSE;
CREATE TABLE ADRESSE (
    id_ADRESSE INT AUTO_INCREMENT NOT NULL,
    num_rue_Adresse INT NOT NULL,
    rue_Adresse VARCHAR(255),
    code_postale_Adresse VARCHAR(255),
    Ville_Adresse VARCHAR(255),
    pays_Adresse VARCHAR(255),
    PRIMARY KEY (id_ADRESSE)
);


DROP TABLE IF EXISTS Posseder;
CREATE TABLE Posseder (
    id INT NOT NULL AUTO_INCREMENT,
    id_USER INT NOT NULL,
    id_SPECIALITE INT NOT NULL,
    dt_diplome_Posseder DATE,
    PRIMARY KEY (id),
    CONSTRAINT FK_Posseder_id_USER FOREIGN KEY (id_USER) REFERENCES USER (id_USER) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_Posseder_id_SPECIALITE FOREIGN KEY (id_SPECIALITE) REFERENCES SPECIALITE (id_SPECIALITE) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Prendre;
CREATE TABLE Prendre (
    id INT NOT NULL AUTO_INCREMENT,
    id_PATIENT INT NOT NULL,
    id_PRATICIEN INT NOT NULL,
    id_RENDEZ_VOUS INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT FK_Prendre_id_PATIENT FOREIGN KEY (id_PATIENT) REFERENCES USER (id_USER) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_Prendre_id_PRATICIEN FOREIGN KEY (id_PRATICIEN) REFERENCES USER (id_USER) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_Prendre_id_RENDEZ_VOUS FOREIGN KEY (id_RENDEZ_VOUS) REFERENCES RENDEZ_VOUS (id_RENDEZ_VOUS) ON DELETE CASCADE ON UPDATE CASCADE
);


DROP TABLE IF EXISTS Localiser;
CREATE TABLE Localiser (
    id INT NOT NULL AUTO_INCREMENT, 
    id_ADRESSE INT NOT NULL,
    id_USER INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT FK_Localiser_id_ADRESSE FOREIGN KEY (id_ADRESSE) REFERENCES ADRESSE (id_ADRESSE) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_Localiser_id_USER FOREIGN KEY (id_USER) REFERENCES USER (id_USER) ON DELETE CASCADE ON UPDATE CASCADE
);


